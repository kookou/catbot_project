{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\taepd_git\\\\src\\\\components\\\\common\\\\Header.jsx\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Typography from '@material-ui/core/Typography'; // import Link from '@material-ui/core/Link';\n\nimport { Divider, InputBase } from '@material-ui/core';\nimport { NoEncryption } from '@material-ui/icons';\nconst useStyles = makeStyles(theme => ({\n  toolbar: {\n    borderBottom: `1px solid ${theme.palette.divider}`\n  },\n  toolbarTitle: {\n    flex: 1\n  },\n  toolbarSecondary: {\n    justifyContent: 'space-between',\n    overflowX: 'auto'\n  },\n  toolbarLink: {\n    padding: theme.spacing(1),\n    flexShrink: 0,\n    textDecoration: 'none',\n    color: 'inherit',\n    \"&:hover\": {\n      textDecoration: 'underline'\n    }\n  },\n  align: {\n    marginLeft: 'auto',\n    marginRight: 'auto'\n  },\n  inputBase: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n    width: 300\n  }\n}));\n\nconst Header = props => {\n  const classes = useStyles();\n  const {\n    sections,\n    title\n  } = props;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Toolbar, {\n    className: classes.toolbar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, \"\\uD504\\uB85C\\uC81D\\uD2B8\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.align,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputBase, {\n    className: classes.inputBase,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(IconButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SearchIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \"Sign up\")), /*#__PURE__*/React.createElement(Toolbar, {\n    component: \"nav\",\n    variant: \"dense\",\n    className: classes.toolbarSecondary,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, sections.map(section =>\n  /*#__PURE__*/\n  // <Link\n  //   color=\"inherit\"\n  //   noWrap\n  //   key={section.title}\n  //   variant=\"body2\"\n  //   href={section.url}\n  //   className={classes.toolbarLink}\n  // >\n  React.createElement(Link, {\n    className: classes.toolbarLink,\n    to: section.url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, section.title))));\n};\n\nHeader.propTypes = {\n  sections: PropTypes.array,\n  title: PropTypes.string\n};\nexport default Header;","map":{"version":3,"sources":["C:/Users/user/Desktop/taepd_git/src/components/common/Header.jsx"],"names":["React","Link","PropTypes","makeStyles","Toolbar","Button","IconButton","SearchIcon","Typography","Divider","InputBase","NoEncryption","useStyles","theme","toolbar","borderBottom","palette","divider","toolbarTitle","flex","toolbarSecondary","justifyContent","overflowX","toolbarLink","padding","spacing","flexShrink","textDecoration","color","align","marginLeft","marginRight","inputBase","width","Header","props","classes","sections","title","map","section","url","propTypes","array","string"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Typography from '@material-ui/core/Typography';\r\n// import Link from '@material-ui/core/Link';\r\nimport {Divider, InputBase } from '@material-ui/core';\r\nimport { NoEncryption } from '@material-ui/icons';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  toolbar: {\r\n    borderBottom: `1px solid ${theme.palette.divider}`,\r\n  },\r\n  toolbarTitle: {\r\n    flex: 1,\r\n  },\r\n  toolbarSecondary: {\r\n    justifyContent: 'space-between',\r\n    overflowX: 'auto',\r\n  },\r\n  toolbarLink: {\r\n    padding: theme.spacing(1),\r\n    flexShrink: 0,\r\n    textDecoration: 'none',\r\n    color: 'inherit',\r\n    \"&:hover\": {\r\n      textDecoration: 'underline'},\r\n    \r\n  },\r\n  align:{\r\n    marginLeft  : 'auto',\r\n    marginRight : 'auto'\r\n  },\r\n  inputBase:{\r\n    borderBottom: `1px solid ${theme.palette.divider}`,\r\n    width: 300\r\n  }\r\n}));\r\n\r\nconst Header = (props) => {\r\n  const classes = useStyles();\r\n  const { sections, title } = props;\r\n\r\n  return (\r\n    <>\r\n      <Toolbar className={classes.toolbar}>\r\n        <Button color=\"primary\" >프로젝트</Button>\r\n        {/* <Typography\r\n          component=\"h2\"\r\n          variant=\"h5\"\r\n          color=\"inherit\"\r\n          align=\"center\"\r\n          noWrap\r\n          className={classes.toolbarTitle}\r\n        >\r\n          {title}\r\n        </Typography> */}\r\n        <div className={classes.align}>\r\n        <InputBase className={classes.inputBase}>\r\n        </InputBase>\r\n        <IconButton >\r\n          <SearchIcon />\r\n        </IconButton>\r\n        </div>\r\n        <Button variant=\"outlined\" size=\"small\">\r\n          Sign up\r\n        </Button>\r\n      </Toolbar>\r\n      <Toolbar component=\"nav\" variant=\"dense\" className={classes.toolbarSecondary}>\r\n        {sections.map((section) => (\r\n            // <Link\r\n            //   color=\"inherit\"\r\n            //   noWrap\r\n            //   key={section.title}\r\n            //   variant=\"body2\"\r\n            //   href={section.url}\r\n            //   className={classes.toolbarLink}\r\n            // >\r\n            <Link \r\n              className={classes.toolbarLink}\r\n              to={section.url}>\r\n              {section.title}\r\n            </Link>\r\n        ))}\r\n      </Toolbar>\r\n    </>\r\n  );\r\n}\r\n\r\nHeader.propTypes = {\r\n  sections: PropTypes.array,\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default Header"]},"metadata":{},"sourceType":"module"}